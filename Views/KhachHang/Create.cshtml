@model ShopGiay.Models.KHACHHANG

@{
    ViewBag.Title = "Tạo mới khách hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>TẠO MỚI KHÁCH HÀNG</h2>

@using (Html.BeginForm("Create", "KhachHang", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label><strong>Họ Tên:</strong></label>
            @Html.ValidationMessageFor(model => model.HOTENKH, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.HOTENKH, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })

            </div>
        </div>

        <div class="form-group">
            <label><strong>Số Điện Thoại:</strong></label>
            @Html.ValidationMessageFor(model => model.DIENTHOAI, "", new { @class = "text-danger" })
            <div class="col-md-10" onkeypress="return isNumberKey(event)">
                <input class="input-validation-error input-full" Required = "required" htmlattributes="{ class = form-control }" id="DIENTHOAI" name="DIENTHOAI" type="text" onkeypress="return isNumberKey(event)">

            </div>
        </div>


        <div class="form-group">
            <label><strong>Tên Đăng Nhập:</strong></label>
            @Html.ValidationMessageFor(model => model.TENDNKH, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="TENDNKH" name="TENDNKH" type="text" value="">

            </div>
        </div>

        <div class="form-group">
            <label><strong>Mật khẩu:</strong></label>
            @Html.ValidationMessageFor(model => model.MATKHAUKH, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required"  htmlattributes="{ class = form-control }" id="MATKHAUKH" name="MATKHAUKH" type="password">

            </div>
        </div>

        <div class="form-group">
            <label><strong>Email:</strong></label>
            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-validation-error input-full" Required = "required" htmlattributes="{ class = form-control }" id="EMAIL" name="EMAIL" type="email">

            </div>
        </div>

        <div class="form-group">
            <label><strong>Ngày Sinh:</strong></label>
            @Html.ValidationMessageFor(model => model.NGAYSINH, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="NGAYSINH" name="NGAYSINH" type="date">

            </div>
        </div>

        <div class="form-group">
            <label><strong>Hình Ảnh:</strong></label>
            @Html.ValidationMessageFor(model => model.HINHANH, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input class="input-full" Required = "required" htmlattributes="{ class = form-control }" id="fileUpload" type="file" name="fileUpload" accept="image/jpeg,image/jpg,image/png" >
            </div>
        </div>

        <div class="form-group">
            <label><strong>Địa chỉ:</strong></label>
            @Html.ValidationMessageFor(model => model.DIACHI, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DIACHI, new { htmlAttributes = new { @class = "form-control" }, @Required = "required" })

            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-default" /> |
                @Html.ActionLink("Quay lại trang quản lý", "Index")
            </div>
        </div>
    </div>
}
<script language='javascript'>

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }

</script>
